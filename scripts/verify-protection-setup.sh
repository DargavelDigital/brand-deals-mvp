#!/bin/bash

# Verify that branch protection setup is working correctly

set -e

echo "üîç Verifying Branch Protection Setup"
echo "===================================="

# Check if gh CLI is installed
if ! command -v gh &> /dev/null; then
    echo "‚ùå GitHub CLI (gh) is not installed"
    echo "   Install with: brew install gh (macOS) or visit https://cli.github.com/"
    exit 1
fi

# Check if user is authenticated
if ! gh auth status &> /dev/null; then
    echo "‚ùå Not authenticated with GitHub"
    echo "   Run: gh auth login"
    exit 1
fi

# Get repository name
REPO=$(gh repo view --json nameWithOwner -q .nameWithOwner)
echo "üì¶ Repository: $REPO"

# Check if main branch protection exists
echo ""
echo "üõ°Ô∏è  Checking branch protection rules..."

PROTECTION_STATUS=$(gh api repos/$REPO/branches/main/protection 2>/dev/null || echo "null")

if [[ "$PROTECTION_STATUS" == "null" ]]; then
    echo "‚ùå No branch protection rules found for main branch"
    echo "   Run: npm run setup:branch-protection"
    exit 1
fi

echo "‚úÖ Branch protection rules found"

# Check required status checks
REQUIRED_CHECKS=$(echo "$PROTECTION_STATUS" | jq -r '.required_status_checks.contexts[]?' 2>/dev/null || echo "")
if [[ "$REQUIRED_CHECKS" == *"audit-and-test"* ]]; then
    echo "‚úÖ Required status check 'audit-and-test' is configured"
else
    echo "‚ùå Required status check 'audit-and-test' is missing"
fi

# Check required reviews
REQUIRED_REVIEWS=$(echo "$PROTECTION_STATUS" | jq -r '.required_pull_request_reviews.required_approving_review_count' 2>/dev/null || echo "0")
if [[ "$REQUIRED_REVIEWS" -ge 1 ]]; then
    echo "‚úÖ Required reviews: $REQUIRED_REVIEWS"
else
    echo "‚ùå Required reviews not configured"
fi

# Check force push protection
FORCE_PUSHES=$(echo "$PROTECTION_STATUS" | jq -r '.allow_force_pushes.enabled' 2>/dev/null || echo "true")
if [[ "$FORCE_PUSHES" == "false" ]]; then
    echo "‚úÖ Force pushes are disabled"
else
    echo "‚ùå Force pushes are allowed (should be disabled)"
fi

# Check if branch is up-to-date required
STRICT_STATUS=$(echo "$PROTECTION_STATUS" | jq -r '.required_status_checks.strict' 2>/dev/null || echo "false")
if [[ "$STRICT_STATUS" == "true" ]]; then
    echo "‚úÖ Up-to-date branch required before merge"
else
    echo "‚ùå Up-to-date branch not required"
fi

# Check conversation resolution
CONVERSATION_RESOLUTION=$(echo "$PROTECTION_STATUS" | jq -r '.required_conversation_resolution.enabled' 2>/dev/null || echo "false")
if [[ "$CONVERSATION_RESOLUTION" == "true" ]]; then
    echo "‚úÖ Conversation resolution required"
else
    echo "‚ùå Conversation resolution not required"
fi

echo ""
echo "üß™ Testing required checks locally..."

# Test audit checks
echo "üìä Running audit checks..."
if pnpm audit:all > /dev/null 2>&1; then
    echo "‚úÖ Audit checks pass"
else
    echo "‚ùå Audit checks fail"
    echo "   Run: pnpm audit:all"
fi

# Test idempotency tests
echo "üîÑ Running idempotency tests..."
if pnpm test:idempotency > /dev/null 2>&1; then
    echo "‚úÖ Idempotency tests pass"
else
    echo "‚ùå Idempotency tests fail"
    echo "   Run: pnpm test:idempotency"
fi

# Test build
echo "üèóÔ∏è  Testing build..."
if pnpm run build:netlify > /dev/null 2>&1; then
    echo "‚úÖ Build passes"
else
    echo "‚ùå Build fails"
    echo "   Run: pnpm run build:netlify"
fi

echo ""
echo "üìã Summary:"
echo "==========="

# Count issues
ISSUES=0

if [[ "$REQUIRED_CHECKS" != *"audit-and-test"* ]]; then
    echo "‚ùå Missing required status check"
    ((ISSUES++))
fi

if [[ "$REQUIRED_REVIEWS" -lt 1 ]]; then
    echo "‚ùå Missing required reviews"
    ((ISSUES++))
fi

if [[ "$FORCE_PUSHES" != "false" ]]; then
    echo "‚ùå Force pushes are allowed"
    ((ISSUES++))
fi

if [[ "$STRICT_STATUS" != "true" ]]; then
    echo "‚ùå Up-to-date branch not required"
    ((ISSUES++))
fi

if [[ "$CONVERSATION_RESOLUTION" != "true" ]]; then
    echo "‚ùå Conversation resolution not required"
    ((ISSUES++))
fi

if [[ $ISSUES -eq 0 ]]; then
    echo "üéâ All branch protection rules are properly configured!"
    echo ""
    echo "‚úÖ Ready for production use"
    echo "‚úÖ Main branch is protected"
    echo "‚úÖ All required checks are configured"
else
    echo "‚ö†Ô∏è  Found $ISSUES issue(s) with branch protection setup"
    echo ""
    echo "üîß To fix issues:"
    echo "   1. Run: npm run setup:branch-protection"
    echo "   2. Re-run this verification script"
    exit 1
fi
